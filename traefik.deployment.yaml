apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-service-account
  namespace: kube-public
  labels:
    app: traefik
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  namespace: kube-public
  labels:
    app: traefik
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      restartPolicy: Always
      serviceAccountName: traefik-service-account
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - traefik
              topologyKey: "kubernetes.io/hostname"
      containers:
        - image: traefik:v2.7
          name: traefik
          ports:
            - name: http-proxy
              containerPort: 80
            - name: admin-dashboard
              containerPort: 8080
          args:
            - --api.insecure
            - --providers.kubernetesingress
            - --providers.kubernetescrd
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --accesslog
            - --log.level=INFO
          volumeMounts:
            - name: traefik-config
              mountPath: "/etc/traefik/traefik.yml"
              subPath: "traefik.yml"
      volumes:
        - name: traefik-config
          configMap:
            name: traefik-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-configmap
  namespace: kube-system
  labels:
    app: traefik
data:
  traefik.yml: |
    api:
      dashboard: true
      insecure: true
    entryPoints:
      web:
        address: ":80"
      websecure:
        address: ":443"
    providers:
      kubernetesIngress: {}
      kubernetesCRD: {}
